name: build-gcp-images

on:
  push:
    tags:
      - v*

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup build environment   
        run: |
          make build-deps

      - uses: actions/setup-go@v2
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.45.2

  build:
    name: Build VM images
    runs-on: ubuntu-18.04

    env:
      KROSSBOARD_UI_IMAGE: ${{ secrets.KROSSBOARD_UI_IMAGE }}
      KROSSBOARD_KOAINSTANCE_IMAGE: ${{ secrets.KROSSBOARD_KOAINSTANCE_IMAGE }}

    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.18

    - name: Check out code
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install build dependencies   
      run: |
        make build-deps

    - name: Test package
      run: |
        make test

    - name: Patch version
      run: |
        KB_RELEASE_VERSION=$(./tooling/get-dist-version.sh)
        VERSION_LINE=$(grep -n 'KrossboardVersion =' cmd/root.go | cut -f1 -d:)
        VERSION_ORIG=$(grep 'KrossboardVersion =' cmd/root.go | awk -F '"' '{print $(NF-1)}')
        sed -i "${VERSION_LINE}s/${VERSION_ORIG}/${KB_RELEASE_VERSION}/" cmd/root.go
        echo "==>>> Release version is $(grep 'KrossboardVersion =' cmd/root.go | awk -F '"' '{print $(NF-1)}')"
        
    - name: Setup GCP credentials
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      id: gcp-setu-cred
      with:
        version: '290.0.1'
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Build binaries and GCP images
      shell: bash
      env:
        GOOGLE_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        make dist-cloud-image-gcp
